version: '3.8'

services:
  app:
    build: .
    container_name: contracts_app
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: ${DATABASE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: contracts_db
    environment:
      POSTGRES_USER: ${DB_USER:-contracts_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-contracts_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./deployment/database/schema.sql:/docker-entrypoint-initdb.d/02-schema.sql
    ports:
      - "5433:5432"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: contracts_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./client/dist:/usr/share/nginx/html
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data: